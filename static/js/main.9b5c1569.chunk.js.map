{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","reset","sortAlphabet","ALPHABET","sortByLength","LENGTH","this","sortedGoods","goods","visibleGoods","sort","good1","good2","localeCompare","length","Error","console","log","getReorderedGoods","className","type","classNames","onClick","map","good","Math","random","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkDE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAACL,GAAD,MAAmB,CAC/BC,YAAaD,EAAMC,gBARzB,EAYEK,MAAQ,WACN,EAAKD,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAfzB,EAmBEI,aAAe,WACb,EAAKF,SAAS,CACZH,SAAUL,EAASW,YArBzB,EAyBEC,aAAe,WACb,EAAKJ,SAAS,CACZH,SAAUL,EAASa,UA3BzB,4CA+BE,WACE,MAAiCC,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAvEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNa,EAAe,YAAID,GACtBE,MAAK,SAACC,EAAeC,GACpB,OAAQf,GACN,KAAKL,EAASW,SACZ,OAAOQ,EAAME,cAAcD,GAE7B,KAAKpB,EAASa,OACZ,OAAOM,EAAMG,OAASF,EAAME,OAE9B,KAAKtB,EAASM,KACZ,OAAO,EAET,QACE,MAAM,IAAIiB,MAAM,yBAWxB,OAPInB,GACFa,EAAaV,UAIfiB,QAAQC,IAAIpB,EAAUD,GAEfa,EA0CeS,CAClBzB,EACA,CAAEG,aAAYC,aAGhB,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAY7B,EAASW,WAAaN,IAEtCyB,QAAShB,KAAKJ,aANhB,iCAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAY7B,EAASa,SAAWR,IAEpCyB,QAAShB,KAAKF,aANhB,4BAWA,wBACEgB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAazB,IAEjB0B,QAAShB,KAAKP,QANhB,sBAWEF,IAAaL,EAASM,MAAQF,IAE5B,wBACEwB,KAAK,SACLD,UAAU,4BACVG,QAAShB,KAAKL,MAHhB,sBAUN,6BACGM,EAAYgB,KAAI,SAAAC,GAAI,OACnB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,EAAOC,KAAKC,sBAzF/B,GAAyBC,IAAMC,WCjE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9b5c1569.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods]\n    .sort((good1: string, good2: string): number => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n\n        case SortType.NONE:\n          return 0;\n\n        default:\n          throw new Error('No such sort type');\n      }\n    });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState((state: State) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  sortAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const sortedGoods = getReorderedGoods(\n      goodsFromServer,\n      { isReversed, sortType },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': SortType.ALPHABET !== sortType },\n            )}\n            onClick={this.sortAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': SortType.LENGTH !== sortType },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          {sortedGoods.map(good => (\n            <li\n              key={good + Math.random()}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}